#pragma once
#include <iostream>
#include <vector>
#include <algorithm>
#include "Thing.class"

bool compareByPrimary(const Thing &a, const Thing &b) {
    return a.primary < b.primary;
}

class Cell {
private:

    //World *world_ptr = nullptr;
public:
    std::vector<unsigned long> obs_id; // id объеков в этой клетке

    /*Cell(World* ptr){
        //world_ptr = ptr;
    }*/

    /*std::string get_str(){
        std::vector<Thing> tmp;
        for(auto i : (*world_ptr)){
            tmp.push_back(i)
        }
        std::sort(obs.begin(), obs.end(), compareByPrimary);
        if(obs.size()==0){
            return " ";
        }else{
            return cur_world.obs[obs_id[0]].symbol;
        }
    }*/
};
